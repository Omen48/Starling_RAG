Команда и условия
В рамках методологии – внутренний сертифицированный процесс разработки ( ISO9000:2015) на принципах Agile (Local, Test, QA, PROD с CI/CD).
Команда:

Бэкенд: техлид, 2 разработчика (джуны);
Фронтенд: 1,5 разработчика;
Дизайнер;
QA : 1,5 сеньора;
Дополнительные роли: QA сеньор - бизнес аналитик, проектный менеджер.
Дополнительная помочь от CEO.

Бюджет ~400К евро, срок 6 месяцев.
1 этап

Срок: 2 месяца.
Задачи: формирование макета, демонстрации технологического стека.
Реализации – фронтенд с мокапами, реализация только 1 ветки бизнес сценария с демонстрацией базовых компонент и общей работоспособности проекта.
Параллельно отдел тестирование разрабатывает среду для автоматизированных прогонов скриптов и формируют план нагрузочных сценариев по предоставленным спецификациям.

2 этап

Срок: 3,5 месяца.
Задачи: по представленному макету реализовать полноценное приложение.
Реализация – итеративная, проговаривается протокол взаимодействия с фронтендом, в данном случае выписывалась полная сигнатура всех методов, далее стороны согласовывали порядок реализации функций для поэтапного тестирования.
Таким образом отдел QA мог почти сразу начать тестирование и процесс правок в зависимости от ожиданий заказчика.

3 этап

Срок: 2 недели.
Задачи: по готовому приложению провести интеграционное и нагрузочное тестирование, с дальнейшим развертыванием и сопровождением.
Команда разработки продолжает исправлять найденные проблемы и заканчивать реализовывать отдельные элементы.
Проводится первый показ заказчику готового приложения через QA среду.
По окончанию срока на QA должен лежать предпродакшен.
Этап сопровождения и дополнительных замечаний
Срок: 1-3 месяца.
Задачи: сопровождать пользователей быстрой реакцией на возникающие проблемы реализовывать дополнительные незначительные функции по пожеланиям заказчика.

Команда изменяется основная сила – младший разработчик и QA специалист.

По окончанию срока подписывается новых договор на продление поддержки либо формируют договор на развитие приложения.

Пример реализации : РНФ проект
Формируем начальную идею : умеем оптимизировать работу с данными, хотелось бы делать это ещё лучше, используя семантику данных (дополнительные характеристики).
Определяем базовую команду исследователей: к.т.н., 2 аспиранта, 2 студента.
Находим подходящий гранд молодых ученых, учитывая опыт, команду, широту предлагаемой темы исследования – РНФ, мероприятие «Проведение инициативных исследований молодыми учеными».
Формируем бюджет (1.5 млн в год).

РНФ заявка
Цели проекта: представить эффективные механизмы обработки сложноструктурированных сверхбольших данных с использованием семантической модели предметной области.
Формируем научную проблему и новизну – создание методов эффективного применения структурных особенностей данных как увеличить скорость работы с данными и минимизировать их размер использую структурные особенности.
Показываем отсутствие результатов в нашей задаче на основе всестороннего обзора (хранилища научных данных, хранилища основанные на семантике данных, индексация с помощью заполняющих пространство кривых и т.д.).
Также необходимо описать конкурентов (Исследовательская группа ATNoG, группа проекта SciDB).
Описываем предлагаемые методы (механизм двухуровневой индексации данных, адаптируемые семантические модели и т.д.)
Фиксируем план работ и результаты. Готово.

Реализация проекта

Первые 2-4 месяца проверка основных новых гипотез и изучение новых направлений.
Параллельно, доработка уже проверенных ранее идей, экспериментальные исследования и публикация материалов.
4-8 месяц – формирование общего представления концепции: перераспределение усилий на сильные и перспективных сторон, проведение дополнительных исследований.
8-12 месяц – реализация основной части концепции, подготовка к публикации, подготовка отчетных материалов.

Данные этапы повторяются каждый год, однако из года в год должна быть преемственность и зрелость конечных результатов, в том числе, в рамках создаваемого прототипа и разрабатываемых методов.

Что же в итоге?
Отличия научных проектов от индустриальных:
неопределенность в достижимости цели;
свобода действий в реализации задачи;
уровень компетенций и подготовки;
методологические особенности;
уровень и степень ответственности.

Пример реализации: оптимизированный потоковый фреймворк
Цели проекта: необходимо выбрать лучшую технологию потоковой обработки больших данных и адаптировать её под задачи заказчика.
Дополнительно, необходимо учитывать потенциал использования алгоритмов планирования для оптимизации вычислительных ресурсов.

Как начать?
Пример реализации: оптимизированный потоковый фреймворк
Цели проекта: необходимо выбрать лучшую технологию потоковой обработки больших данных и адаптировать её под задачи заказчика.
Дополнительно, необходимо учитывать потенциал использования алгоритмов планирования для оптимизации вычислительных ресурсов.

Как начать? Рассмотреть всех конкурентов и выбрать лучший вариант с дальнейшей адаптацией?
Теоретический обзор и анализ существующих систем потоковой обработки:
Elasticsearch
Что делать? - Немного изобретать
Что помогает в этой ситуации?
Категоризация критериев: а) Workload management features, б) Application level features, в) Fault-tolerance features, г) External integration capabilities – это помогло определить высокоуровневые приоритеты заказчика.

Типы конечных приложений – а) Unpredictable highly volatile workload (U), б) Predictable period-dependent load(P), в) Constant stable load (C) – это расставило акценты на важность тех или иных критериев в рамках выбранного типа нагрузки.

Балльная экспертная система – на основании коллективного мнения технических экспертов обеих сторон выставляются баллы критериям кандидатов с учетом типа приложений

С другой стороны…
Необходимо разработать алгоритм планирования потоковой обработки.
Необходимо реализовать на базе выбранного фреймворка дополнительную ветку с поддержкой развертывания на облаке и встраивания алгоритмов планирования.
Провести комплексное тестирование.
Проверить на наборе боевых примеров и передать код в адаптацию под конкретные бизнес задачи партнеров.

Как заключение можно отметить..
R&D проекты похожи на IT-проекты, зрелостью, ответственностью и ожиданиям по финальным результатам, а с другой стороны, имеют высокую степень неопределенности из-за существенной исследовательской направленности.